;-------------------
; FALL 
; TRETIS  inspired  
;-------------------

TETRA_WIDTH=2 ; 2x2 pixels tetrahedrons blocks 
WELL_WIDTH=TETRA_WIDTH*10
WELL_DEPTH=TETRA_WIDTH*22
 

; sprites 
I0: .byte 8,2,0xff,0xff; horizontal I 
I1: .byte 2,8,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60 ; vertical I 
SQUARE: .byte 4,4,0xf0,0xf0,0xf0,0xf0 
T0: .byte 6,4,0xfc,0xfc,0x30,0x30 ; normal T 
T1: .byte 4,6,0x30,0x30,0xf0,0xf0,0x30,0x30 ; T rotated right  
T2: .byte 4,6,0xc0,0xc0,0xf0,0xf0,0xc0,0xc0 ; T rotated left 
T3: .byte 6,4,0x30,0x30,0xf0,0xf0 ; T upside down 
L0: .byte 6,4,0xfc,0xfc,0xc0,0xc0 ; L rotated right 
L1: .byte 4,6,0xf0,0xf0,0x30,0x30,0x30,0x30 ; L upside down 
L2: .byte 6,4,0xc,0xc,0xfc,0xfc ; L rotated left 
L3: .byte 4,6,0xc0,0xc0,0xc0,0xfc,0xfc ; L upside 
J0: .byte 6,4,0xfc,0xfc,0xc,0xc ; J rotated left 
J1:  .byte 4,6,0xc0,0xc0,0xc0,0xc0,0xfc,0xfc ; J upside 
J2: .byte 6,4,0xc0,0xc0,0xfc,0xfc ; j rotated right 
J3: .byte 4,6,0xfc,0xfc,0xc,0xc,0xc,0xc  ; j upside down 
Z0: .byte 6,4,0xf0,0xf0,0x3c,0x3c ; 
Z1: .byte 4,6,0x30,0x30,0x3c,0x30,0xc0,0xc0 
S0: .byte 6,4,0x3c,0x3c,0xf0,0xf0 
S1: .byte 4,6,0xc0,0xc0,0xf0,0xf0,0xc,0xc 

;--------------------
; draw the well in 
; wich tetrahedrons 
; falls.
;--------------------
draw_well:
; left side 
    ldw x,#(0<<8)+0
    ldw y,#((VRES-WELL_DEPTH)<<8)+VRES
    call line
;bottom  
    ldw x,#(1<<8)+WELL_WIDTH+1 
    ldw y,#((VRES-1)<<8)+VRES-1
    call line 
;right side
    ldw x,#((WELL_WIDTH+1)<<8)+WELL_WIDTH+1
    ldw y,#((VRES-WELL_DEPTH)<<8)+VRES
    call line 
    ret 

;-------------------------
; initialize game 
;-------------------------
fall_init:
    call tv_cls  
    call draw_well 
    ret 

fall:
    call fall_init
jra .
    ret 

